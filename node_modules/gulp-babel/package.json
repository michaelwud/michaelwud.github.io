{
  "_from": "gulp-babel",
  "_id": "gulp-babel@8.0.0",
  "_inBundle": false,
  "_integrity": "sha512-oomaIqDXxFkg7lbpBou/gnUkX51/Y/M2ZfSjL2hdqXTAlSWZcgZtd2o0cOH0r/eE8LWD0+Q/PsLsr2DKOoqToQ==",
  "_location": "/gulp-babel",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "gulp-babel",
    "fetchSpec": "latest",
    "name": "gulp-babel",
    "raw": "gulp-babel",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-babel/-/gulp-babel-8.0.0.tgz",
  "_shasum": "e0da96f4f2ec4a88dd3a3030f476e38ab2126d87",
  "_shrinkwrap": null,
  "_spec": "gulp-babel",
  "_where": "D:\\Program Files\\hexo",
  "author": {
    "email": "sindresorhus@gmail.com",
    "name": "Sindre Sorhus",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/babel/gulp-babel/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Charles Samborski",
      "email": "demurgos@demurgos.net",
      "url": "demurgos.net"
    }
  ],
  "dependencies": {
    "plugin-error": "^1.0.1",
    "replace-ext": "^1.0.0",
    "through2": "^2.0.0",
    "vinyl-sourcemaps-apply": "^0.2.0"
  },
  "deprecated": false,
  "description": "Use next generation JavaScript, today",
  "devDependencies": {
    "@babel/core": "^7.0.0",
    "@babel/plugin-transform-arrow-functions": "^7.0.0",
    "@babel/plugin-transform-block-scoping": "^7.0.0",
    "@babel/plugin-transform-classes": "^7.0.0",
    "gulp-sourcemaps": "^1.1.1",
    "mocha": "^5.0.0",
    "pre-commit": "^1.2.2",
    "vinyl": "^2.1.0",
    "xo": "^0.18.2"
  },
  "engines": {
    "node": ">=6"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/babel/gulp-babel#readme",
  "keywords": [
    "babel",
    "codegen",
    "compiler",
    "desugaring",
    "es2015",
    "es2016",
    "es2017",
    "gulpplugin",
    "javascript",
    "rewriting",
    "syntax",
    "transformation",
    "transpiler"
  ],
  "license": "MIT",
  "name": "gulp-babel",
  "optionalDependencies": {},
  "peerDependencies": {
    "@babel/core": "^7.0.0"
  },
  "pre-commit": {
    "run": [
      "test"
    ]
  },
  "readme": "> This readme is for gulp-babel v8 + Babel v7\n> Check the [7.x branch](https://github.com/babel/gulp-babel/tree/v7-maintenance) for docs with Babel v6 usage\n\n# gulp-babel [![npm](https://img.shields.io/npm/v/gulp-babel.svg?maxAge=2592000)](https://www.npmjs.com/package/gulp-babel) [![Build Status](https://travis-ci.org/babel/gulp-babel.svg?branch=master)](https://travis-ci.org/babel/gulp-babel)\n\n> Use next generation JavaScript, today, with [Babel](https://babeljs.io)\n\n*Issues with the output should be reported on the Babel [issue tracker](https://phabricator.babeljs.io/).*\n\n\n## Install\n\nInstall `gulp-babel` if you want to get the pre-release of the next version of `gulp-babel`.\n\n```\n# Babel 7\n$ npm install --save-dev gulp-babel @babel/core @babel/preset-env\n\n# Babel 6\n$ npm install --save-dev gulp-babel@7 babel-core babel-preset-env\n```\n\n## Usage\n\n```js\nconst gulp = require('gulp');\nconst babel = require('gulp-babel');\n\ngulp.task('default', () =>\n\tgulp.src('src/app.js')\n\t\t.pipe(babel({\n\t\t\tpresets: ['@babel/env']\n\t\t}))\n\t\t.pipe(gulp.dest('dist'))\n);\n```\n\n\n## API\n\n### babel([options])\n\n#### options\n\nSee the Babel [options](https://babeljs.io/docs/usage/options/), except for `sourceMap` and `filename` which is handled for you.\n\n\n## Source Maps\n\nUse [gulp-sourcemaps](https://github.com/floridoo/gulp-sourcemaps) like this:\n\n```js\nconst gulp = require('gulp');\nconst sourcemaps = require('gulp-sourcemaps');\nconst babel = require('gulp-babel');\nconst concat = require('gulp-concat');\n\ngulp.task('default', () =>\n\tgulp.src('src/**/*.js')\n\t\t.pipe(sourcemaps.init())\n\t\t.pipe(babel({\n\t\t\tpresets: ['@babel/env']\n\t\t}))\n\t\t.pipe(concat('all.js'))\n\t\t.pipe(sourcemaps.write('.'))\n\t\t.pipe(gulp.dest('dist'))\n);\n```\n\n\n## Babel Metadata\n\nFiles in the stream are annotated with a `babel` property, which contains the metadata from [`babel.transform()`](https://babeljs.io/docs/usage/api/).\n\n#### Example\n\n```js\nconst gulp = require('gulp');\nconst babel = require('gulp-babel');\nconst through = require('through2');\n\nfunction logBabelMetadata() {\n\treturn through.obj((file, enc, cb) => {\n\t\tconsole.log(file.babel.test); // 'metadata'\n\t\tcb(null, file);\n\t});\n}\n\ngulp.task('default', () =>\n\tgulp.src('src/**/*.js')\n\t\t.pipe(babel({\n\t\t\t// plugin that sets some metadata\n\t\t\tplugins: [{\n\t\t\t\tpost(file) {\n\t\t\t\t\tfile.metadata.test = 'metadata';\n\t\t\t\t}\n\t\t\t}]\n\t\t}))\n\t\t.pipe(logBabelMetadata())\n)\n```\n\n\n## Runtime\n\nIf you're attempting to use features such as generators, you'll need to add `transform-runtime` as a plugin, to include the Babel runtime. Otherwise, you'll receive the error: `regeneratorRuntime is not defined`.\n\nInstall the runtime:\n\n```\n$ npm install --save-dev @babel/plugin-transform-runtime \n$ npm install --save @babel/runtime \n```\n\nUse it as plugin:\n\n```js\nconst gulp = require('gulp');\nconst babel = require('gulp-babel');\n\ngulp.task('default', () =>\n\tgulp.src('src/app.js')\n\t\t.pipe(babel({\n\t\t\tplugins: ['@babel/transform-runtime']\n\t\t}))\n\t\t.pipe(gulp.dest('dist'))\n);\n```\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/babel/gulp-babel.git"
  },
  "scripts": {
    "test": "xo && mocha"
  },
  "version": "8.0.0",
  "xo": {
    "envs": [
      "mocha",
      "node"
    ]
  }
}
