{
  "_from": "hexo-generator-json-content",
  "_id": "hexo-generator-json-content@3.0.1",
  "_inBundle": false,
  "_integrity": "sha1-gXz87L6avZMEFAXyQGDb6T6YR0Q=",
  "_location": "/hexo-generator-json-content",
  "_phantomChildren": {
    "bluebird": "3.5.3",
    "camel-case": "3.0.0",
    "cross-spawn": "4.0.2",
    "highlight.js": "9.13.1",
    "html-entities": "1.2.1",
    "striptags": "2.2.1"
  },
  "_requested": {
    "escapedName": "hexo-generator-json-content",
    "fetchSpec": "latest",
    "name": "hexo-generator-json-content",
    "raw": "hexo-generator-json-content",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/hexo-generator-json-content/-/hexo-generator-json-content-3.0.1.tgz",
  "_shasum": "817cfcecbe9abd93041405f24060dbe93e984744",
  "_shrinkwrap": null,
  "_spec": "hexo-generator-json-content",
  "_where": "D:\\Program Files\\hexo",
  "author": {
    "email": "webmaster@alexbruno.net.br",
    "name": "Alex Bruno CÃ¡ceres"
  },
  "bugs": {
    "url": "https://github.com/alexbruno/hexo-generator-json-content/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "hexo-util": "latest",
    "keyword-extractor": "latest",
    "moment": "latest"
  },
  "deprecated": false,
  "description": "Hexo plugin to generate a JSON file with the contents of posts and pages to generic use or consumption, like AJAX site search, Twitter typehead or public content API",
  "devDependencies": {},
  "homepage": "https://github.com/alexbruno/hexo-generator-json-content",
  "keywords": [
    "content",
    "generator",
    "hexo",
    "json",
    "templating"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "hexo-generator-json-content",
  "optionalDependencies": {},
  "readme": "# hexo-generator-json-content\r\n\r\nHexo (<https://hexo.io/>) plugin to generate a JSON file for generic use or consumption with the contents of posts and pages.\r\n\r\nIt's useful to serve compact and agile content data for microservices like AJAX site search, Twitter typeahead or public API.\r\n\r\n## Installation\r\n\r\n```bash\r\nnpm i -S hexo-generator-json-content\r\n```\r\n\r\n## Usage\r\n\r\nHexo will run the generator _automagically_ when you run `hexo serve` or `hexo generate`. :smirk:\r\n\r\nUsing the default settings, the `content.json` file looks like the following structure:\r\n\r\n```javascript\r\nmeta: {\r\n    title: hexo.config.title,\r\n    subtitle: hexo.config.subtitle,\r\n    description: hexo.config.description,\r\n    author: hexo.config.author,\r\n    url: hexo.config.url\r\n},\r\npages: [{ //-> all pages\r\n    title: page.title,\r\n    slug: page.slug,\r\n    date: page.date,\r\n    updated: page.updated,\r\n    comments: page.comments,\r\n    permalink: page.permalink,\r\n    path: page.path,\r\n    excerpt: page.excerpt, //-> only text ;)\r\n    keywords: null //-> it needs settings\r\n    text: page.content, //-> only text minified ;)\r\n    raw: page.raw, //-> original MD content\r\n    content: page.content //-> final HTML content\r\n}],\r\nposts: [{ //-> only published posts\r\n    title: post.title,\r\n    slug: post.slug,\r\n    date: post.date,\r\n    updated: post.updated,\r\n    comments: post.comments,\r\n    permalink: post.permalink,\r\n    path: post.path,\r\n    excerpt: post.excerpt, //-> only text ;)\r\n    keywords: null //-> it needs settings\r\n    text: post.content, //-> only text minified ;)\r\n    raw: post.raw, //-> original MD content\r\n    content: post.content, //-> final HTML content\r\n    categories: [{\r\n        name: category.name,\r\n        slug: category.slug,\r\n        permalink: category.permalink\r\n    }],\r\n    tags: [{\r\n        name: tag.name,\r\n        slug: tag.slug,\r\n        permalink: tag.permalink\r\n    }]\r\n}]\r\n```\r\n\r\n`hexo.util.stripHTML` is used to get only clean text for `excerpt` and `text` fields.\r\n\r\n## Configuration\r\n\r\nYou can set some options in `_config.yml` to generate a custom `content.json`.\r\n\r\nDefault options are as follows:\r\n\r\n```yaml\r\njsonContent:\r\n  meta: true\r\n  keywords: false # language name option\r\n  dateFormat: undefined # format string\r\n  pages:\r\n    title: true\r\n    slug: true\r\n    date: true\r\n    updated: true\r\n    comments: true\r\n    path: true\r\n    link: true\r\n    permalink: true\r\n    excerpt: true\r\n    keywords: true # but only if root keywords option language was set\r\n    text: true\r\n    raw: false\r\n    content: false\r\n  posts:\r\n    title: true\r\n    slug: true\r\n    date: true\r\n    updated: true\r\n    comments: true\r\n    path: true\r\n    link: true\r\n    permalink: true\r\n    excerpt: true\r\n    keywords: true # but only if root keywords option language was set\r\n    text: true\r\n    raw: false\r\n    content: false\r\n    categories: true\r\n    tags: true\r\n```\r\n\r\n### Date formats\r\n\r\n`dateFormat` option sets an output format for datetime objects `date` and `updated`.\r\n\r\nIt uses [moment](https://github.com/moment/moment/) to do the trick, so any string accepted by [format](http://momentjs.com/docs/#/displaying/format/) method can be used.\r\n\r\nIf not defined, default format is the `JSON.stringify` result for `Date` objects.\r\n\r\n\r\n### Keywords\r\n\r\n`keywords` options extracts keywords from excerpt using [michaeldelorenzo/keyword-extractor](https://github.com/michaeldelorenzo/keyword-extractor), NPM package to create a keywords array from a string by removing stopwords.\r\n\r\nIf **keyword-extractor** don't supports your language, don't worry! It's disabled by default.\r\n\r\nYou can exclude meta, pages or posts contents from `content.json` by setting `meta`, `pages`, or `posts` to `false`.\r\n\r\nTo exclude individual fields from `pages` or `posts` output set their config values to `false`.\r\n\r\nTo exclude specific paths, use an `ignore` list. Any path that contains at least one of the listed substrings will be skipped from indexing. For example:\r\n\r\n```yaml\r\njsonContent:\r\n  ignore:\r\n    - path/to/a/page\r\n    - url/to/one/post\r\n    - an-entire-category\r\n    - specific.file\r\n    - .ext # a file extension\r\n```\r\n\r\n## Output\r\n\r\nBy default, the json output includes `meta`, `pages` and `posts` sections. If only one section is enabled by config, the json output will consist of a single array.\r\n\r\nFor example, the following config enables only `posts`, showing title, date, path, and text fields:\r\n\r\n```yaml\r\njsonContent:\r\n  meta: false\r\n  pages: false\r\n  posts:\r\n    title: true\r\n    date: true\r\n    path: true\r\n    text: true\r\n    raw: false\r\n    content: false\r\n    slug: false\r\n    updated: false\r\n    comments: false\r\n    link: false\r\n    permalink: false\r\n    excerpt: false\r\n    categories: false\r\n    tags: false\r\n```\r\n\r\nThe result `content.json` will look like this:\r\n\r\n```javascript\r\n[{ //-> only published posts\r\n  title: post.title,\r\n  date: post.date,\r\n  text: post.content, //-> only text minified ;)\r\n  path: post.path\r\n}]\r\n```\r\n\r\n## Usage examples\r\n\r\nComing soon...\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/alexbruno/hexo-generator-json-content.git"
  },
  "scripts": {
    "test": ""
  },
  "version": "3.0.1"
}
